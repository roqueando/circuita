# Este é um arquivo binário de exemplo
# Em um caso real, seria gerado pelo compilador
# Por enquanto, apenas simula dados de firmware

# Dados simulados de um firmware que pisca LED
# Vetor de reset: jump para 0x100
0x0C 0x94 0x00 0x08  # jmp 0x1000
0x00 0x00 0x00 0x00  # padding
0x00 0x00 0x00 0x00  # padding
0x00 0x00 0x00 0x00  # padding

# Código principal (simulado)
# Configura DDRB (pino 13 como saída)
0xE5 0x9A 0x20 0x00  # ldi r25, 0x20
0x84 0xB2 0x05 0x92  # out DDRB, r25

# Loop principal
# Liga LED (seta bit 5 do PORTB)
0xE5 0x9A 0x20 0x00  # ldi r25, 0x20
0x85 0xB5 0x05 0x92  # out PORTB, r25

# Delay
0xE0 0xE0 0x00 0x00  # ldi r30, 0x00
0xE0 0xF0 0x00 0x00  # ldi r31, 0x00
0x31 0x97 0x00 0x00  # cpi r30, 0x00
0x00 0x00 0x00 0x00  # brne delay_loop

# Desliga LED (limpa bit 5 do PORTB)
0xE5 0x9A 0x00 0x00  # ldi r25, 0x00
0x85 0xB5 0x05 0x92  # out PORTB, r25

# Volta ao início do loop
0x00 0x00 0x00 0x00  # rjmp main_loop
